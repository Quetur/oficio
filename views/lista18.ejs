<%- include('menu2.ejs') %>




  <script src="https://code.jquery.com/jquery-latest.js"></script>
  <link href="css/lista18.css" rel="stylesheet">
  <!--  <tr> 
            <td> <p>data + ' ' + row.apellido </p>
            </td>
            <td> <p> row.calificacion  </p>
            </td>
        </tr>
  <!--  return   data + ' ' + row.apellido + ' - ' + row.calificacion +' <img class="img_estrellita" src="img/m_estrella2.png"></img>'
    saque esto para ocultar el boton de grilla <link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">-->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/animate.css@3.5.2/animate.min.css">

    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.3/css/bootstrap.min.css" integrity="sha384-Zug+QiDoJOrZ5t4lssLdxGhVrurbmBWopoEl+M6BdEfwnCJZtKxi1KgxUyJq13dy" crossorigin="anonymous">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous" type="7caed6d53d62b29227787649-text/javascript"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.3/js/bootstrap.min.js" integrity="sha384-a5N7Y/aK3qNeh15eJKGWxsqtnX/wWdSZSKp+81YjTmS15nvnvxKHuzaWwXHDli+4" crossorigin="anonymous" type="7caed6d53d62b29227787649-text/javascript"></script>
    
    <link href="https://cdn.datatables.net/v/bs4/dt-2.0.0/b-3.0.0/sc-2.4.0/sl-2.0.0/datatables.min.css" rel="stylesheet">
     
    <script src="https://cdn.datatables.net/v/bs4/dt-2.0.0/b-3.0.0/sc-2.4.0/sl-2.0.0/datatables.min.js"></script>


  <!-- esto es para los filtros del footer
  <link href="https://cdn.datatables.net/1.10.9/css/jquery.dataTables.css" rel="stylesheet" type="text/css" />
  <script src="https://cdn.datatables.net/1.10.9/js/jquery.dataTables.js"></script>
-->
<style>


</style>

  <div class="container container-center">
    

    <!-- 
    <img src="/img/filter.png" height="50px" width="50px" type="button" value="Filtrar" id="boton-servicio" onclick="showHide()">
    <- Aplicar Filtros</img>
  -->

   
    <div class="barra" >
      <div class="form-floating">
        <label for="select_provi" class="form-label" style="font-size:larger; text-decoration: underline;"> Provincia </label>
        <select class="form-select" name="select_provi" id="select_provi" style="width: 180px;" onchange="functionProv(this)"></select>

      </div>

      <div class="form-floating">
        <select class="form-select" name="select_localidad" id="select_localidad" style="width: 180px;"></select>
        <label for="select_provi" class="form-label" style="font-size:larger; text-decoration: underline;">Localidad</label>
      </div>
      <div class="form-floating">
        <select class="form-select" name="select_oficio" id="select_oficio"></select>
        <label for="select_oficio" class="form-label" style="font-size:larger; text-decoration: underline;">Oficio</label>
        </select>
      </div>
    </div>
  
    <!-- <table id="example" class="table table-sm table-hover cards " style="width: 100%;">  -->
    <table id="example" class="table table-sm table-hover  cards " style="width: 100%; margin-left: 0px;">
      <thead>
        <tr>
          <th></th>
          <th></th>

          <th></th>
          <th></th>
          <th>Localidad</th>

          <th>Provincia</th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody style=" border-top: none;">




      </tbody>
      <tfoot hidden>
        <tr>
          <th></th>
          <th></th>

          <th>Oficio</th>
          <th></th>
          <th>Localidad</th>

          <th>Provincia</th>
          <th>Celular</th>
          <th></th>
        </tr>
      </tfoot>
      
    </table>
    
  </div>


  <script>
    // SELECT provincia, descripcion, ST_Distance_Sphere(POINT(latitud,longitug),POINT(-34.6564185,-58.6780789))/1000 as distances FROM localidad where municipio = 'ituzaingo';
    console.log("lista18")
    let filtro = "/1"
    if (navigator.geolocation) {
       navigator.geolocation.getCurrentPosition(onSuccess, onError);
    }



function onSuccess(position)
{
  latitude = position.coords.latitude;
  longitude = position.coords.longitude;
  //alert(latitude);
  //alert(longitude);
  today = new Date();
  date = today.getDate()+'/'+(today.getMonth()+1)+'/'+today.getFullYear();
  time = today.getHours() + ":" + today.getMinutes() + ":" + today.getSeconds();
  dateTime = date+' '+time;
  //alert(dateTime);



}

function onError(error) {
  var txt;
  switch(error.code)
  {
    case error.PERMISSION_DENIED:
    txt = 'Location permission denied';
    break;
    case error.POSITION_UNAVAILABLE:
    txt = 'Location position unavailable';
    break;
    case error.TIMEOUT:
    txt = 'Location position lookup timed out';
    break;
    default:
    txt = 'Unknown position.'
  }
  alert(txt)
}


    function functionProv(e) {
      //datatable.columns.adjust().draw(); // Redraw the DataTable
      // datatable.clear().draw();
      // datatable.ajax.reload(null, false);
      let prov = e.options[e.selectedIndex].getAttribute("title")
      console.log(" function e provincia elejida", prov)
      $("#select_localidad").find('option').remove(); // borro las localidades anteriores


      console.log("eligio provincia : ", prov)

      //document.getElementById("button").value =  document.getElementById("select_provi").value´
      //table.buttons.text(document.getElementById("select_provi").value)
      let url = "/api/localidades"
      if (prov == undefined || prov < 1) {
        console.log("prov", prov)
      } else {
        console.log("tiene prov", prov)
        url = url + "/" + prov
        filtro = "/u.id_provincia = " + prov
      }
      console.log("servidor ->", url)
      fetch(url)
        .then(response => response.json())
        .then((responseData) => {
          console.log("localidad ->", responseData)
          // alert('HAY ' + lista_de_provincias.length) // Puedes poner este alert para ver si la llamada POST te devuelve algo
          // creamos un elemento de tipo option
          //var opt = document.createElement("option");
          //let modelList = document.createElement("select_localidad");
          var html = '<option id="select_localidad" name="select_localidad" value="">Todas</option>'

          for (var count = 0; count < responseData.length; count++) {
            console.log("dato1", responseData[count], "codigo ", responseData[count].cod)
            console.log("codigo ", responseData[count].cod)

            html = html + '<option id="select_localidad" name="select_localidad" value="' + responseData[count].descripcion + '" title="' + responseData[count].cod + '">' + responseData[count].descripcion + '</option>';
          }

          console.log("html ->", html)

          select_localidad.innerHTML = html;

        });
    }

    function showHide() {
      // Definir elemento
      let div = document.getElementById("div-servicios");
      if (!div) {
        // No existe, hay que crearlo
        div = document.createElement("div");
        div.setAttribute("id", "div-servicios");
        document.body.appendChild(div);

        var servicio1 = document.createElement("a");
        servicio1.innerHTML = "This is a paragraph.";
        servicio1.setAttribute("class", "servicios");
        div.appendChild(servicio1);

        var servicio2 = document.createElement("a");
        servicio2.innerHTML = "Filtros";
        servicio2.setAttribute("class", "servicios");
        div.appendChild(servicio2);

        var servicio3 = document.createElement("a");
        servicio3.innerHTML = "This is a paragraph.";
        servicio3.setAttribute("class", "servicios");
        div.appendChild(servicio3);
        // Retardar para que aparezca con transición
        setTimeout(showHide, 50);
      } else {
        // Mostrar u ocultar
        div.classList.toggle('activo');
      }
    }


    // saco de usuarios solo las prov que existen 
    // saco de usuario solo las localidades que existen SELECT DISTINCT l.descripcion as loc FROM usuario x INNER JOIN localidad l on x.id_localidad = l.id_localidad;

    let url = "/api/oficios"

    console.log("servidor ->", url)
    fetch(url)
      .then(response => response.json())
      .then((responseData) => {
        console.log("oficio ->", responseData)
        // alert('HAY ' + lista_de_provincias.length) // Puedes poner este alert para ver si la llamada POST te devuelve algo
        // creamos un elemento de tipo option
        //var opt = document.createElement("option");
        //let modelList = document.createElement("select_localidad");
        var html = '<option id="select_oficio" name="select_oficio" value="" placeholder="oficio">Todos</option>'

        for (var count = 0; count < responseData.length; count++) {
          console.log("dato1", responseData[count], "codigo ", responseData[count].cod)
          console.log("codigo ", responseData[count].cod)

          html = html + '<option id="select_oficio" name="select_oficio" value="' + responseData[count].descripcion + '" title="' + responseData[count].cod + '">' + responseData[count].descripcion + '</option>';
        }

        console.log("html ->", html)

        select_oficio.innerHTML = html;

      });



    function createtabla(usuario) {

      var sampleData = usuario
      var table = $('#example').DataTable({
        responsive: true,
        language: {
          lengthMenu: "Mostrar _MENU_ registros por página",
          zeroRecords: "Ningún usuario encontrado",
          info: "Mostrando de _START_ a _END_ de un total de _TOTAL_ registros",
          infoEmpty: "Ningún usuario encontrado",
          infoFiltered: "(filtrados desde _MAX_ registros totales)",
          search: "Buscar:",
          loadingRecords: "Cargando...",
          paginate: {
            first: "Pri",
            last: "Últ",
            next: "Sig",
            previous: "Ant"
          }
        },
        pageLength: 100, /*registros por pagina*/
        pagingType: `simple_numbers`,
        data: sampleData,
        'dom': "<'row'<'col-sm-12'<'float-md-right ml-2'B>f>>" +
          "<'row'<'col-sm-12'tr>>" +
          "<'row'<'col-sm-12 col-md-5'i> <'col-sm-12 col-md-7'p> >",

        'buttons': ['csv', {
          'text': '<i class="fa fa-id-badge fa-fw" aria-hidden="true" ></i>',
          'action': function(e, dt, node) {

            $(dt.table().node()).toggleClass('cards d-flex justify-content-around');
            $("tbody").toggleClass("row").toggleClass("justify-content-center");
            $("#register").toggleClass("cards");
            $("#example thead").toggle();
            $("#card-toggle .fa").toggleClass("fa-table fa-id-badge");
            $("#card-toggle .fa").toggleClass("fa-id-badge");
            $('.fa', node).toggleClass(['fa-table', 'fa-id-badge']);
            $("#card-toggle .fa").toggleClass("fa-table");
            if ($("#example").hasClass("cards")) {
              var max = 0;
              $('#example tr').each(function() {
                max = Math.max($(this).height(), max);
              }).height(max);
            } else {
              $("#example tr").each(function() {
                $(this).height("auto");
              });
            }

            dt.draw('page');

          },
          'className': 'btn-sm',
          'attr': {
            'title': 'Change views',
            'hidden': true,
          }
        }],
        'select': 'single',
        'columns': [{
            data: "nombre",
            name: "nombre",
            render: function(data, type, row, meta) {
              return (function(data, type, row) {

                return ' <div class="primer_renglon">'+
                            '<div class="nom">' + data + ' ' + row.apellido + ' </div>' +
                            '<div class="calif">'+
                              '<div class="puntos">' + row.calificacion + '<img class="img_estrellita calificar" src="img/m_estrella2.png"></img> </div>' +
                             '</div>'
                        
              })(data, type, row, meta);  
            }
          },
          {
            render: function(data, type, row, meta, full) {
              data =   '<div class="contenedor-testimonio">'+
                                    
                '<img class="imagen-testimonio" src="https://oficio.s3.sa-east-1.amazonaws.com/'+row.imagen +'"/>'+
                '<div class="contenedor-texto-testimonio"><p class="cargo-testimonio">'+row.oficio+'</p>'+
                  '<p class="texto-testimonio" >'+row.presentacion+'</p>'+
                  '<p class="texto-testimonio" ><strong>'+row.localidad+'</strong></p>'+
              '</div></div>';

              {
                return data
              };
            }
          },

          {
            data: "oficio",
            name: "oficio",
            visible: false,
            render: function(data, type, row, meta) {
              return data;
            }
          },
          {
            data: "presentacion",
            name: "presentacion",
            class: 'text-center',
            visible: false,
            render: function(data, type, row, meta) {
              return data;
            }
          },
          {
            data: "localidad",
            name: "localidad",
            class: 'text-center',
            visible: false,
            render: function(data, type, row, meta) {
              return data;
            }
          },

          {
            data: "provincia",
            name: "provincia",
            visible: false,
            render: function(data, type, row, meta) {
              return data;
            }
          },
          {
            visible: false,
            render: function(data, type, row, meta, full) {
              data = '<img class="img_whatsapp" src="img/whatsapp.png">  ' + row.celular + '</img>';



              {
                return data
              };
            }
          },
          {
            class: "vercard",
            render: function(data, type, row, meta, full) {

              data = '<div class="divboton"><button name="masinfo" style="width: 150px; background-color: #17bdff; font-weight: bold; border-radius: 7px;" value="Mas info..." type="button" id="' + row.dni + '">Mas info...</button></div>'


              {
                return data
              };
            }
          }
        ],
        'drawCallback': function(settings) {
          var api = this.api();
          var $table = $(api.table().node());

          if ($table.hasClass('cards')) {

            // Create an array of labels containing all table headers
            var labels = [];
            $('thead th', $table).each(function() {
              labels.push($(this).text());
            });

            // Add data-label attribute to each cell
            $('tbody tr', $table).each(function() {
              $(this).find('td').each(function(column) {
                $(this).attr('data-label', labels[column]);
              });
            });

            var max = 0;
            $('tbody tr', $table).each(function() {
              max = Math.max($(this).height(), max);
            }).height(max);

          } else {
            // Remove data-label attribute from each cell
            $('tbody td', $table).each(function() {
              $(this).removeAttr('data-label');
            });

            $('tbody tr', $table).each(function() {
              $(this).height('auto');
            });
          }
        },

        initComplete: function(settings, json) {


          // Add select filter
          $('#dataTable_length').append('<label>&nbsp; App ID:</label>');
          $('#dataTable_length').append('<select class="form-control input-sm"  id="am_aplicacion_id"></select>');
          am_aplicacion_ids = [{
            0: 'All Apps'
          }, {
            1: 'App ID 1'
          }, {
            2: 'App ID 2'
          }];
          for (var key in am_aplicacion_ids) {
            var obj = am_aplicacion_ids[key];
            for (var prop in obj) {
              if (obj.hasOwnProperty(prop)) {
                $('#am_aplicacion_id').append('<option value="' + prop + '">' + obj[prop] + '</option>');
              }
            }
          }
          // Filter results on select change
          /*$('#am_aplicacion_id').on('change', function () {
              oTable.columns(2).search($(this).val()).draw();
          });
          */

          $('#example').on('click', '.vercard', function(e) {
            console.log('ver card', e.target.id);
            var id = (e.target.id);
            console.log("id :", id);
            var linea = "/vercard/" + id;
            console.log("linea ", linea);
           
            let params = `scrollbars=no,resizable=no,url=no,strWindowFeatures=no,location=no,toolbar=no,menubar=no,status=no,width=800px,height=900px`;

             window.open(linea, 'Popup', params);
          });

          function abremodal() {
            //document.getElementById("categoria").value = "2";
            //  $('#categoria').val('2');
            $('#miModal').modal('show');
          }



          $('#example').on('click', '.calificar', function(e) {
            console.log('calificar', e.target.id);

          });

          $('#select_provi').on('change', function() {
            //table.clear().draw();
            //datatable.columns.adjust().draw();
            //  table.ajax.reload();
            prov = document.getElementById("select_provi").value
            console.log("filtrado de sprovi ", prov)

            // table.search(this.value).draw();  // con esto busca por columna pero agrega eltexto en search 
            table.columns(5).search(prov).draw();



          });


          $('#select_localidad').on('change', function() {
            loc = document.getElementById("select_localidad").value
            console.log("filtrado de sloc ", loc)
            // table.search(this.value).draw();  // con esto busca por columna pero agrega eltexto en search 
            table.columns(4).search(loc).draw();
          });

          //var selectedValue = $("#select_provi").val();


          $('#select_oficio').on('change', function() {
            ofi = document.getElementById("select_oficio").value
            console.log("filtrado de sofi ", ofi)
            // table.search(this.value).draw();  // con esto busca por columna pero agrega eltexto en search 
            table.columns(2).search(ofi).draw();
          });


        }

      })

      // filtros de abajo tengo que agregar en html el footer
      //buildSelect(table);


      function filterColumn(colum, value) {
        table.column(colum).search(value).draw();
      }



      filtro_provincia()




      let url = "/api/localidades"
      console.log("servidor ->", url)
      fetch(url)
        .then(response => response.json())
        .then((responseData) => {
          console.log("localidad ->", responseData)
          // alert('HAY ' + lista_de_provincias.length) // Puedes poner este alert para ver si la llamada POST te devuelve algo
          // creamos un elemento de tipo option
          var opt = document.createElement("option");
          let modelList = document.createElement("select_localidad");
          var html = '<option id="select_localidad" name="select_localidad" value="">Todas</option>'

          for (var count = 0; count < responseData.length; count++) {
            console.log("dato1", responseData[count], "codigo ", responseData[count].cod)
            console.log("codigo ", responseData[count].cod)
            html += '<option id="select_localidad" name="select_localidad" value="' + responseData[count].descripcion + '" title="' + responseData[count].cod + '">' + responseData[count].descripcion + '</option>';
          }

          console.log("html ->", html)

          select_localidad.innerHTML = html;

        });


      function filtro_provincia() {
        let url = "/api/provincias"
        console.log("servidor ->", url)
        fetch(url)
          .then(response => response.json())
          .then((responseData) => {
            console.log("provincias ->", responseData)
            // alert('HAY ' + lista_de_provincias.length) // Puedes poner este alert para ver si la llamada POST te devuelve algo
            // creamos un elemento de tipo option
            var opt = document.createElement("option");
            let modelList = document.createElement("select_provi");
            var html = '<option  value="" >Todas</option>'

            for (var count = 0; count < responseData.length; count++) {
              console.log("dato1", responseData[count], "codigo ", responseData[count].cod)
              console.log("codigo ", responseData[count].cod)
              html += '<option id="select_provi" name="select_provi" value="' + responseData[count].descripcion + '" title="' + responseData[count].cod + '">' + responseData[count].descripcion + '</option>';
            }

            console.log("html ->", html)

            select_provi.innerHTML = html;

          });
        console.log("salio")
        // console.log("nombre de la provincia =", e.options[e.selectedIndex].getAttribute("data-provname"))
      }

      function buildSelect(table) {
        console.log("dentro de buildselect")
        table.columns().every(function() {
          console.log("dentro de buildselect 2")
          var column = table.column(this, {
            search: 'applied'
          });
          var select = $('<select><option value=""></option></select>')
            .appendTo($(column.footer()).empty())
            .on('change', function() {
              console.log("dentro de buildselect 3")
              var val = $.fn.dataTable.util.escapeRegex($(this).val());

              column
                .search(val ? '^' + val + '$' : '', true, false)
                .draw();
            });

          column.data().unique().sort().each(function(d, j) {
            select.append('<option value="' + d + '">' + d + '</option>');
          });

          // The rebuild will clear the exisiting select, so it needs to be repopulated
          var currSearch = column.search();
          if (currSearch) {
            select.val(currSearch.substring(1, currSearch.length - 1));
          }
        });
      }


    }

    $(document).ready(function() {
      url = "/api/usuarios" + filtro
      console.log("servidor ->", url)
      fetch(url)
        .then(response => response.json())
        .then((data) => {
          createtabla(data)
        });



    });
  </script>


</body>