<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <title>Tus Oficios</title>
  <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
  <!-- <link rel="stylesheet" href="fonts.css"> -->


  <style>
    .cards tbody tr {
      float: left;
      width: 19rem;
      margin: 0.5rem;
      border: 0.0625rem solid rgba(0, 0, 0, .125);
      border-radius: .25rem;
      box-shadow: 0.25rem 0.25rem 0.5rem rgba(0, 0, 0, 0.25);
    }

    .cards tbody td {
      display: block;
    }

    .cards thead {
      display: none;
    }

    .cards td:before {
      content: attr(data-label);
      position: relative;
      float: left;
      color: #808080;
      min-width: 4rem;
      margin-left: 0;
      margin-right: 1rem;
      text-align: left;
    }

    tr.selected td:before {
      color: #CCC;
    }

    .table .avatar {
      width: 50px;
    }

    .cards .avatar {
      width: 150px;
      height: 150px;
      margin: 15px;
    }
  </style>
</head>

<body>
  <script src="https://code.jquery.com/jquery-latest.js"></script>


  <script src="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
  <script src="https://cdn.datatables.net/v/bs4/dt-1.10.18/b-1.5.6/sc-2.0.0/sl-1.3.0/datatables.min.css"></script>
  <script src="https://cdn.datatables.net/v/bs4/dt-1.10.18/b-1.5.6/sc-2.0.0/sl-1.3.0/datatables.min.js"></script>





  <head>
  </head>

  <div class="container">
    <table id="example" class="table table-sm table-hover cards" cellspacing="0" width="100%">
      <thead>
        <tr>
          <th></th>
          <th>Nombre</th>
          <th>Oficio</th>
          <th>Localidad</th>
          <th>CodigoPostal</th>
          <th>Provincia</th>
          <th>Celular</th>
        </tr>
      </thead>
    </table>
  </div>


  <script>
    console.log("lista11")

    url = "/api/usuarios"
    console.log("servidor ->", url)
    fetch(url)
      .then(response => response.json())
      .then((data) => {
        createtabla(data)
      });

    function createtabla(usuario) {

      var sampleData = usuario
      var table = $('#example').DataTable({
        language: {
          lengthMenu: "Mostrar _MENU_ registros por página",
          zeroRecords: "Ningún usuario encontrado",
          info: "Mostrando de _START_ a _END_ de un total de _TOTAL_ registros",
          infoEmpty: "Ningún usuario encontrado",
          infoFiltered: "(filtrados desde _MAX_ registros totales)",
          search: "Buscar:",
          loadingRecords: "Cargando...",
          paginate: {
            first: "Primero",
            last: "Último",
            next: "Siguiente",
            previous: "Anterior"
          }
        },
        pageLength: 6,
        data: sampleData,
        'dom': "<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'<'float-md-right ml-2'B>f>>" +
          "<'row'<'col-sm-12'tr>>" +
          "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
        'ajax': 'https://gyrocode.github.io/files/jquery-datatables/objects.json',
        'buttons': ['csv', {
          'text': '<i class="fa fa-id-badge fa-fw" aria-hidden="true" ></i>',
          'action': function(e, dt, node) {

            $(dt.table().node()).toggleClass('cards');
            $('.fa', node).toggleClass(['fa-table', 'fa-id-badge']);

            dt.draw('page');
          },
          'className': 'btn-sm',
          'attr': {
            'title': 'Change views',
          }
        }],
        'select': 'single',
        'columns': [{
            'orderable': false,
            'data': null,
            'className': 'text-center',
            'render': function(data, type, full, meta) {
              if (type === 'display') {
                var token = (Math.random() * 3 * 1e38).toString(16);
                data = '<i class="fa fa-user fa-fw"></i>';
                data = '<img src="https://www.gravatar.com/avatar/' + token + '.png?d=robohash" class="avatar border rounded-circle">';
              }

              return data;
            }
          },
          {
                      data: "nombre", name: "nombre",
                      render: function (data, type, row, meta) { return  (function(data, type, row) { return data +' '+ row.apellido + ' - '+ row.calificacion +'*'})(data, type, row, meta); } 
                  },
                  {
                      data: "oficio", name: "oficio",
                      render: function (data, type, row, meta) { return  data; }
                  },
                  {
                      data: "localidad", name: "localidad", class: 'text-center',
                      render: function (data, type, row, meta) { return  data; }
                  },
                  {
                      data: "codigopostal", name: "codigopostal", class: 'text-center',
                      render: function (data, type, row, meta) { return data; }
                  },
                  {
                      data: "provincia", name: "provincia",
                      render: function (data, type, row, meta) { return data; }
                  },
                  {
                      data: "celular", name: "celular",
                      render: function (data, type, row, meta) { return  (function(data) { return ' '+ data +'' })(data, type, row, meta); }
                  }
        ],
        'drawCallback': function(settings) {
          var api = this.api();
          var $table = $(api.table().node());

          if ($table.hasClass('cards')) {

            // Create an array of labels containing all table headers
            var labels = [];
            $('thead th', $table).each(function() {
              labels.push($(this).text());
            });

            // Add data-label attribute to each cell
            $('tbody tr', $table).each(function() {
              $(this).find('td').each(function(column) {
                $(this).attr('data-label', labels[column]);
              });
            });

            var max = 0;
            $('tbody tr', $table).each(function() {
              max = Math.max($(this).height(), max);
            }).height(max);

          } else {
            // Remove data-label attribute from each cell
            $('tbody td', $table).each(function() {
              $(this).removeAttr('data-label');
            });

            $('tbody tr', $table).each(function() {
              $(this).height('auto');
            });
          }
        }
      })
    }
    /* .on('select', function (e, dt, type, indexes) {
      var rowData = table.rows(indexes).data().toArray()
      $('#row-data').html(JSON.stringify(rowData));
   })
   .on('deselect', function () {
      $('#row-data').empty();
   })
*/
  </script>
  <script src=""></script>
</body>